FUNNELWEB LISTING FILE
======================

Dump of mapped file "<<Suppressed>>".

MEMORY DUMP OF MAPPED FILE
==========================

+-------------------------------------------------+------------------+
| 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F | 0123456789ABCDEF |
+-------------------------------------------------+------------------+
| 50 52 30 31 3A 20 54 65 73 74 20 74 68 65 20 69 | PR01: Test the i |
| 6E 6C 69 6E 65 20 74 79 70 65 73 65 74 74 69 6E | nline typesettin |
| 67 20 66 65 61 74 75 72 65 73 2E 0A 0A 31 2E 20 | g features...1.  |
| 46 69 72 73 74 20 77 65 20 74 65 73 74 20 74 68 | First we test th |
| 65 20 6C 65 67 61 6C 20 75 73 65 20 6F 66 20 74 | e legal use of t |
| 68 65 20 40 7B 6C 69 74 65 72 61 6C 40 7D 20 63 | he @{literal@} c |
| 6F 6E 73 74 72 75 63 74 2E 0A 0A 32 2E 54 65 73 | onstruct...2.Tes |
| 74 20 40 7B 40 7D 20 28 69 6C 6C 65 67 61 6C 29 | t @{@} (illegal) |
| 2E 0A 40 41 40 3C 45 72 72 6F 72 20 52 65 63 6F | ..@A@<Error Reco |
| 76 65 72 79 20 50 6F 69 6E 74 40 3E 0A 0A 33 2E | very Point@>..3. |
| 20 54 65 73 74 20 74 68 65 20 63 6F 6E 73 74 72 |  Test the constr |
| 75 63 74 20 40 7B 61 63 72 6F 73 73 0A 20 20 20 | uct @{across.    |
| 6D 6F 72 65 20 74 68 61 6E 20 6F 6E 65 20 6C 69 | more than one li |
| 6E 65 40 7D 2E 0A 0A 34 2E 20 4E 6F 77 20 77 65 | ne@}...4. Now we |
| 20 74 65 73 74 20 74 68 65 20 63 6F 6E 73 74 72 |  test the constr |
| 75 63 74 20 77 69 74 68 20 6E 6F 6E 2D 74 65 78 | uct with non-tex |
| 74 20 66 6F 6C 6C 6F 77 69 6E 67 20 69 74 2E 0A | t following it.. |
| 20 20 20 40 7B 40 3C 73 6C 6F 74 68 40 3E 40 7D |    @{@<sloth@>@} |
| 0A 40 41 40 3C 45 72 72 6F 72 20 52 65 63 6F 76 | .@A@<Error Recov |
| 65 72 79 20 50 6F 69 6E 74 40 3E 0A 20 20 20 40 | ery Point@>.   @ |
| 7B 20 20 20 20 20 40 3E 20 20 20 40 7D 0A 40 41 | {     @>   @}.@A |
| 40 3C 45 72 72 6F 72 20 52 65 63 6F 76 65 72 79 | @<Error Recovery |
| 20 50 6F 69 6E 74 40 3E 0A 0A 35 2E 20 54 65 73 |  Point@>..5. Tes |
| 74 20 74 68 65 20 6C 65 67 61 6C 20 75 73 65 20 | t the legal use  |
| 6F 66 20 74 68 65 20 40 2F 65 6D 70 68 61 73 69 | of the @/emphasi |
| 73 40 2F 20 63 6F 6E 73 74 72 75 63 74 2E 0A 0A | s@/ construct... |
| 36 2E 54 65 73 74 20 40 2F 40 2F 20 28 69 6C 6C | 6.Test @/@/ (ill |
| 65 67 61 6C 29 2E 0A 40 41 40 3C 45 72 72 6F 72 | egal)..@A@<Error |
| 20 52 65 63 6F 76 65 72 79 20 50 6F 69 6E 74 40 |  Recovery Point@ |
| 3E 0A 0A 37 2E 20 54 65 73 74 20 74 68 65 20 63 | >..7. Test the c |
| 6F 6E 73 74 72 75 63 74 20 40 2F 61 63 72 6F 73 | onstruct @/acros |
| 73 0A 20 20 20 6D 6F 72 65 20 74 68 61 6E 20 6F | s.   more than o |
| 6E 65 20 6C 69 6E 65 40 2F 2E 0A 0A 38 2E 20 4E | ne line@/...8. N |
| 6F 77 20 77 65 20 74 65 73 74 20 74 68 65 20 63 | ow we test the c |
| 6F 6E 73 74 72 75 63 74 20 77 69 74 68 20 6E 6F | onstruct with no |
| 6E 2D 74 65 78 74 20 66 6F 6C 6C 6F 77 69 6E 67 | n-text following |
| 20 69 74 2E 0A 20 20 20 40 2F 40 3C 73 6C 6F 74 |  it..   @/@<slot |
| 68 40 3E 40 2F 0A 40 41 40 3C 45 72 72 6F 72 20 | h@>@/.@A@<Error  |
| 52 65 63 6F 76 65 72 79 20 50 6F 69 6E 74 40 3E | Recovery Point@> |
| 0A 20 20 20 40 2F 20 20 20 20 20 40 3C 20 20 20 | .   @/     @<    |
| 40 2F 0A 0A 0A 0A                               | @/....           |
+-------------------------------------------------+------------------+


=========================== Start of LINE LIST DUMP ============================

Globl Local| Text
-----------+--------------------------------------------------------------------
00001 00001| PR01: Test the inline typesetting features.<010>
00002 00002| <010>
00003 00003| 1. First we test the legal use of the @{literal@} construct.<010>
00004 00004| <010>
00005 00005| 2.Test @{@} (illegal).<010>
00006 00006| @A@<Error Recovery Point@><010>
00007 00007| <010>
00008 00008| 3. Test the construct @{across<010>
00009 00009|    more than one line@}.<010>
00010 00010| <010>
00011 00011| 4. Now we test the construct with non-text following it.<010>
00012 00012|    @{@<sloth@>@}<010>
00013 00013| @A@<Error Recovery Point@><010>
00014 00014|    @{     @>   @}<010>
00015 00015| @A@<Error Recovery Point@><010>
00016 00016| <010>
00017 00017| 5. Test the legal use of the @/emphasis@/ construct.<010>
00018 00018| <010>
00019 00019| 6.Test @/@/ (illegal).<010>
00020 00020| @A@<Error Recovery Point@><010>
00021 00021| <010>
00022 00022| 7. Test the construct @/across<010>
00023 00023|    more than one line@/.<010>
00024 00024| <010>
00025 00025| 8. Now we test the construct with non-text following it.<010>
00026 00026|    @/@<sloth@>@/<010>
00027 00027| @A@<Error Recovery Point@><010>
00028 00028|    @/     @<   @/<010>
00029 00029| <010>
00030 00030| <010>
00031 00031| <010>
00032 00032| <End-Of-File><010>
-----------+--------------------------------------------------------------------
Globl Local| Text

============================ End of LINE LIST DUMP =============================


=========================== Start of TOKEN LIST DUMP ===========================

Summary: There are 73 tokens in the token list.

Line[Column]: Token Description
-------------------------------

0001[01]: Text. Text scrap[Grey]="PR01: Test the inline typesetting features.<010>
<010>
1. First we test the legal use of the "
0003[39]: @{ Open defn. 
0003[41]: Text. Text scrap[Grey]="literal"
0003[48]: @} Close defn. 
0003[50]: Text. Text scrap[Grey]=" construct.<010>
<010>
2.Test "
0005[08]: @{ Open defn. 
0005[10]: @} Close defn. 
0005[12]: Text. Text scrap[Grey]=" (illegal).<010>
"
0006[01]: @A New section (Level 1). 
0006[03]: @< Open name. 
0006[05]: Text. Text scrap[Grey]="Error Recovery Point"
0006[25]: @> Close name. 
0006[27]: Text. Text scrap[Grey]="<010>
<010>
3. Test the construct "
0008[23]: @{ Open defn. 
0008[25]: Text. Text scrap[Grey]="across<010>
   more than one line"
0009[22]: @} Close defn. 
0009[24]: Text. Text scrap[Grey]=".<010>
<010>
4. Now we test the construct with non-text following it.<010>
   "
0012[04]: @{ Open defn. 
0012[06]: @< Open name. 
0012[08]: Text. Text scrap[Grey]="sloth"
0012[13]: @> Close name. 
0012[15]: @} Close defn. 
0012[17]: Text. Text scrap[White]="<010>
"
0013[01]: @A New section (Level 1). 
0013[03]: @< Open name. 
0013[05]: Text. Text scrap[Grey]="Error Recovery Point"
0013[25]: @> Close name. 
0013[27]: Text. Text scrap[White]="<010>
   "
0014[04]: @{ Open defn. 
0014[06]: Text. Text scrap[White]="     "
0014[11]: @> Close name. 
0014[13]: Text. Text scrap[White]="   "
0014[16]: @} Close defn. 
0014[18]: Text. Text scrap[White]="<010>
"
0015[01]: @A New section (Level 1). 
0015[03]: @< Open name. 
0015[05]: Text. Text scrap[Grey]="Error Recovery Point"
0015[25]: @> Close name. 
0015[27]: Text. Text scrap[Grey]="<010>
<010>
5. Test the legal use of the "
0017[30]: @/ Emphasise. 
0017[32]: Text. Text scrap[Grey]="emphasis"
0017[40]: @/ Emphasise. 
0017[42]: Text. Text scrap[Grey]=" construct.<010>
<010>
6.Test "
0019[08]: @/ Emphasise. 
0019[10]: @/ Emphasise. 
0019[12]: Text. Text scrap[Grey]=" (illegal).<010>
"
0020[01]: @A New section (Level 1). 
0020[03]: @< Open name. 
0020[05]: Text. Text scrap[Grey]="Error Recovery Point"
0020[25]: @> Close name. 
0020[27]: Text. Text scrap[Grey]="<010>
<010>
7. Test the construct "
0022[23]: @/ Emphasise. 
0022[25]: Text. Text scrap[Grey]="across<010>
   more than one line"
0023[22]: @/ Emphasise. 
0023[24]: Text. Text scrap[Grey]=".<010>
<010>
8. Now we test the construct with non-text following it.<010>
   "
0026[04]: @/ Emphasise. 
0026[06]: @< Open name. 
0026[08]: Text. Text scrap[Grey]="sloth"
0026[13]: @> Close name. 
0026[15]: @/ Emphasise. 
0026[17]: Text. Text scrap[White]="<010>
"
0027[01]: @A New section (Level 1). 
0027[03]: @< Open name. 
0027[05]: Text. Text scrap[Grey]="Error Recovery Point"
0027[25]: @> Close name. 
0027[27]: Text. Text scrap[White]="<010>
   "
0028[04]: @/ Emphasise. 
0028[06]: Text. Text scrap[White]="     "
0028[11]: @< Open name. 
0028[13]: Text. Text scrap[White]="   "
0028[16]: @/ Emphasise. 
0028[18]: Text. Text scrap[White]="<010>
<010>
<010>
<010>
"
0032[01]: End Of File. 
============================ End of TOKEN LIST DUMP ============================


========================== Start of MACRO TABLE DUMP ===========================


=========================== End of MACRO TABLE DUMP ============================


========================= Start of DOCUMENT LIST DUMP ==========================


TEXT COMPONENT: Pos(L,C)=(1,1). 

-- Start of Text Scrap List --
Text scrap[Grey]="PR01: Test the inline typesetting features.<010>
<010>
1. First we test the legal use of the "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open  literal.

TEXT COMPONENT: Pos(L,C)=(3,41). 

-- Start of Text Scrap List --
Text scrap[Grey]="literal"
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Close literal.

TEXT COMPONENT: Pos(L,C)=(3,50). 

-- Start of Text Scrap List --
Text scrap[Grey]=" construct.<010>
<010>
2.Test "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open  literal.

TYPESETTER DIRECTIVE COMPONENT: 
   Section "1", Section name="Error Recovery Point".

TEXT COMPONENT: Pos(L,C)=(6,27). 

-- Start of Text Scrap List --
Text scrap[Grey]="<010>
<010>
3. Test the construct "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open  literal.

TEXT COMPONENT: Pos(L,C)=(8,25). 

-- Start of Text Scrap List --
Text scrap[Grey]="across<010>
   more than one line"
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Close literal.

TEXT COMPONENT: Pos(L,C)=(9,24). 

-- Start of Text Scrap List --
Text scrap[Grey]=".<010>
<010>
4. Now we test the construct with non-text following it.<010>
   "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open  literal.

TYPESETTER DIRECTIVE COMPONENT: 
   Section "2", Section name="Error Recovery Point".

TEXT COMPONENT: Pos(L,C)=(13,27). 

-- Start of Text Scrap List --
Text scrap[White]="<010>
   "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open  literal.

TEXT COMPONENT: Pos(L,C)=(14,6). 

-- Start of Text Scrap List --
Text scrap[White]="     "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT: 
   Section "3", Section name="Error Recovery Point".

TEXT COMPONENT: Pos(L,C)=(15,27). 

-- Start of Text Scrap List --
Text scrap[Grey]="<010>
<010>
5. Test the legal use of the "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open emphasise.

TEXT COMPONENT: Pos(L,C)=(17,32). 

-- Start of Text Scrap List --
Text scrap[Grey]="emphasis"
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Close emphasise.

TEXT COMPONENT: Pos(L,C)=(17,42). 

-- Start of Text Scrap List --
Text scrap[Grey]=" construct.<010>
<010>
6.Test "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open emphasise.

TYPESETTER DIRECTIVE COMPONENT: 
   Section "4", Section name="Error Recovery Point".

TEXT COMPONENT: Pos(L,C)=(20,27). 

-- Start of Text Scrap List --
Text scrap[Grey]="<010>
<010>
7. Test the construct "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open emphasise.

TEXT COMPONENT: Pos(L,C)=(22,25). 

-- Start of Text Scrap List --
Text scrap[Grey]="across<010>
   more than one line"
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Close emphasise.

TEXT COMPONENT: Pos(L,C)=(23,24). 

-- Start of Text Scrap List --
Text scrap[Grey]=".<010>
<010>
8. Now we test the construct with non-text following it.<010>
   "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open emphasise.

TYPESETTER DIRECTIVE COMPONENT: 
   Section "5", Section name="Error Recovery Point".

TEXT COMPONENT: Pos(L,C)=(27,27). 

-- Start of Text Scrap List --
Text scrap[White]="<010>
   "
--- End of Text Scrap List ---


TYPESETTER DIRECTIVE COMPONENT:    Open emphasise.

TEXT COMPONENT: Pos(L,C)=(28,6). 

-- Start of Text Scrap List --
Text scrap[White]="     "
--- End of Text Scrap List ---


========================== End of DOCUMENT LIST DUMP ===========================


Global Local| Input File
------------+-------------------------------------------------------------------
     1     1| PR01: Test the inline typesetting features.
     2     2| 
     3     3| 1. First we test the legal use of the @{literal@} construct.
     4     4| 
     5     5| 2.Test @{@} (illegal).
       Error|..........^Text expected after open literal token "@{".
            |..........^Sorry, empty literal strings are not allowed.
            |..........^Skipping after error to the next major construct...
     6     6| @A@<Error Recovery Point@>
            |.^...skipped to here after the error.
     7     7| 
     8     8| 3. Test the construct @{across
     9     9|    more than one line@}.
    10    10| 
    11    11| 4. Now we test the construct with non-text following it.
    12    12|    @{@<sloth@>@}
       Error|......^Text expected after open literal token "@{".
            |......^Skipping after error to the next major construct...
    13    13| @A@<Error Recovery Point@>
            |.^...skipped to here after the error.
    14    14|    @{     @>   @}
       Error|...........^Expecting '@}'.
            |...........^Skipping after error to the next major construct...
    15    15| @A@<Error Recovery Point@>
            |.^...skipped to here after the error.
    16    16| 
    17    17| 5. Test the legal use of the @/emphasis@/ construct.
    18    18| 
    19    19| 6.Test @/@/ (illegal).
       Error|..........^Text expected after open emphasise token "@/".
            |..........^Sorry, empty emphasised strings are not allowed.
            |..........^Skipping after error to the next major construct...
    20    20| @A@<Error Recovery Point@>
            |.^...skipped to here after the error.
    21    21| 
    22    22| 7. Test the construct @/across
    23    23|    more than one line@/.
    24    24| 
    25    25| 8. Now we test the construct with non-text following it.
    26    26|    @/@<sloth@>@/
       Error|......^Text expected after open emphasise token "@/".
            |......^Skipping after error to the next major construct...
    27    27| @A@<Error Recovery Point@>
            |.^...skipped to here after the error.
    28    28|    @/     @<   @/
       Error|...........^Expecting '@/'.
            |...........^Skipping after error to the next major construct...
    29    29| 
    30    30| 
    31    31| 
            | <End-Of-File>
            |.^...skipped to here after the error.
------------+-------------------------------------------------------------------

There were 6 Errors.

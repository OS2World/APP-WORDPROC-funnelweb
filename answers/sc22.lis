FUNNELWEB LISTING FILE
======================

Dump of mapped file "<<Suppressed>>".

MEMORY DUMP OF MAPPED FILE
==========================

+-------------------------------------------------+------------------+
| 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F | 0123456789ABCDEF |
+-------------------------------------------------+------------------+
| 53 43 32 32 3A 20 54 65 73 74 20 73 79 6E 74 61 | SC22: Test synta |
| 78 20 63 68 65 63 6B 69 6E 67 20 6F 66 20 69 6E | x checking of in |
| 70 75 74 20 6C 69 6E 65 20 6C 65 6E 67 74 68 20 | put line length  |
| 70 72 61 67 6D 61 2E 0A 0A 31 2E 20 54 65 73 74 | pragma...1. Test |
| 20 6E 6F 74 20 74 68 72 65 65 20 61 72 67 75 6D |  not three argum |
| 65 6E 74 73 2E 0A 40 70 20 6D 61 78 69 6D 75 6D | ents..@p maximum |
| 5F 69 6E 70 75 74 5F 6C 69 6E 65 5F 6C 65 6E 67 | _input_line_leng |
| 74 68 0A 40 70 20 6D 61 78 69 6D 75 6D 5F 69 6E | th.@p maximum_in |
| 70 75 74 5F 6C 69 6E 65 5F 6C 65 6E 67 74 68 20 | put_line_length  |
| 3D 0A 40 70 20 6D 61 78 69 6D 75 6D 5F 69 6E 70 | =.@p maximum_inp |
| 75 74 5F 6C 69 6E 65 5F 6C 65 6E 67 74 68 20 3D | ut_line_length = |
| 20 78 78 78 20 79 79 79 0A 0A 32 2E 20 54 65 73 |  xxx yyy..2. Tes |
| 74 20 73 65 63 6F 6E 64 20 61 72 67 75 6D 65 6E | t second argumen |
| 74 20 6E 6F 74 20 22 3D 22 2E 0A 40 70 20 6D 61 | t not "="..@p ma |
| 78 69 6D 75 6D 5F 69 6E 70 75 74 5F 6C 69 6E 65 | ximum_input_line |
| 5F 6C 65 6E 67 74 68 20 78 20 73 6C 6F 74 68 0A | _length x sloth. |
| 0A 33 2E 20 54 65 73 74 20 76 61 6C 75 65 20 6F | .3. Test value o |
| 66 20 69 6E 66 69 6E 69 74 79 2E 0A 40 70 20 6D | f infinity..@p m |
| 61 78 69 6D 75 6D 5F 69 6E 70 75 74 5F 6C 69 6E | aximum_input_lin |
| 65 5F 6C 65 6E 67 74 68 20 3D 20 69 6E 66 69 6E | e_length = infin |
| 69 74 79 0A 0A 34 2E 20 54 65 73 74 20 6E 6F 6E | ity..4. Test non |
| 2D 64 65 63 69 6D 61 6C 20 64 69 67 69 74 20 69 | -decimal digit i |
| 6E 20 6E 75 6D 62 65 72 2E 0A 40 70 20 6D 61 78 | n number..@p max |
| 69 6D 75 6D 5F 69 6E 70 75 74 5F 6C 69 6E 65 5F | imum_input_line_ |
| 6C 65 6E 67 74 68 20 3D 20 32 65 66 0A 0A 35 2E | length = 2ef..5. |
| 20 54 65 73 74 20 6E 75 6D 62 65 72 20 69 73 20 |  Test number is  |
| 6D 6F 72 65 20 74 68 61 6E 20 65 69 67 68 74 20 | more than eight  |
| 64 69 67 69 74 73 20 6C 6F 6E 67 2E 0A 40 70 20 | digits long..@p  |
| 6D 61 78 69 6D 75 6D 5F 69 6E 70 75 74 5F 6C 69 | maximum_input_li |
| 6E 65 5F 6C 65 6E 67 74 68 20 3D 20 31 32 33 34 | ne_length = 1234 |
| 35 36 37 38 39 0A 0A 36 2E 20 54 65 73 74 20 6E | 56789..6. Test n |
| 75 6D 62 65 72 20 69 73 20 65 78 61 63 74 6C 79 | umber is exactly |
| 20 65 69 67 68 74 20 64 69 67 69 74 73 20 6C 6F |  eight digits lo |
| 6E 67 2E 0A 40 70 20 6D 61 78 69 6D 75 6D 5F 69 | ng..@p maximum_i |
| 6E 70 75 74 5F 6C 69 6E 65 5F 6C 65 6E 67 74 68 | nput_line_length |
| 20 3D 20 31 32 33 34 35 36 37 38 0A 0A 0A       |  = 12345678...   |
+-------------------------------------------------+------------------+


=========================== Start of LINE LIST DUMP ============================

Globl Local| Text
-----------+--------------------------------------------------------------------
00001 00001| SC22: Test syntax checking of input line length pragma.<010>
00002 00002| <010>
00003 00003| 1. Test not three arguments.<010>
00004 00004| @p maximum_input_line_length<010>
00005 00005| @p maximum_input_line_length =<010>
00006 00006| @p maximum_input_line_length = xxx yyy<010>
00007 00007| <010>
00008 00008| 2. Test second argument not "=".<010>
00009 00009| @p maximum_input_line_length x sloth<010>
00010 00010| <010>
00011 00011| 3. Test value of infinity.<010>
00012 00012| @p maximum_input_line_length = infinity<010>
00013 00013| <010>
00014 00014| 4. Test non-decimal digit in number.<010>
00015 00015| @p maximum_input_line_length = 2ef<010>
00016 00016| <010>
00017 00017| 5. Test number is more than eight digits long.<010>
00018 00018| @p maximum_input_line_length = 123456789<010>
00019 00019| <010>
00020 00020| 6. Test number is exactly eight digits long.<010>
00021 00021| @p maximum_input_line_length = 12345678<010>
00022 00022| <010>
00023 00023| <010>
00024 00024| <End-Of-File><010>
-----------+--------------------------------------------------------------------
Globl Local| Text

============================ End of LINE LIST DUMP =============================


=========================== Start of TOKEN LIST DUMP ===========================

Summary: There are 8 tokens in the token list.

Line[Column]: Token Description
-------------------------------

0001[01]: Text. Text scrap[Grey]="SC22: Test syntax checking of input line length pragma.<010>
<010>
1. Test not three arguments.<010>
"
0007[01]: Text. Text scrap[Grey]="<010>
2. Test second argument not "=".<010>
"
0010[01]: Text. Text scrap[Grey]="<010>
3. Test value of infinity.<010>
"
0013[01]: Text. Text scrap[Grey]="<010>
4. Test non-decimal digit in number.<010>
"
0016[01]: Text. Text scrap[Grey]="<010>
5. Test number is more than eight digits long.<010>
"
0019[01]: Text. Text scrap[Grey]="<010>
6. Test number is exactly eight digits long.<010>
"
0022[01]: Text. Text scrap[White]="<010>
<010>
"
0024[01]: End Of File. 
============================ End of TOKEN LIST DUMP ============================

Macro table dump skipped (Parser was not invoked).
Document list dump skipped (Parser was not invoked).

Global Local| Input File
------------+-------------------------------------------------------------------
     1     1| SC22: Test syntax checking of input line length pragma.
     2     2| 
     3     3| 1. Test not three arguments.
     4     4| @p maximum_input_line_length
       Error|.^This pragma has the wrong number of arguments.
            |.^The correct format is: "@p maximum_input_line_length = <num>|infinity".
            |.^Pragma ignored.
     5     5| @p maximum_input_line_length =
       Error|.^This pragma has the wrong number of arguments.
            |.^The correct format is: "@p maximum_input_line_length = <num>|infinity".
            |.^Pragma ignored.
     6     6| @p maximum_input_line_length = xxx yyy
       Error|.^This pragma has the wrong number of arguments.
            |.^The correct format is: "@p maximum_input_line_length = <num>|infinity".
            |.^Pragma ignored.
     7     7| 
     8     8| 2. Test second argument not "=".
     9     9| @p maximum_input_line_length x sloth
            |.^The correct format is: "@p maximum_input_line_length = <num>|infinity".
            |.^Pragma ignored.
       Error|..............................^Expecting "=".
    10    10| 
    11    11| 3. Test value of infinity.
    12    12| @p maximum_input_line_length = infinity
    13    13| 
    14    14| 4. Test non-decimal digit in number.
    15    15| @p maximum_input_line_length = 2ef
       Error|.................................^Illegal digit. Value must consist entirely of decimal digits.
            |.................................^You can also use the value "infinity".
            |.................................^Pragma ignored.
    16    16| 
    17    17| 5. Test number is more than eight digits long.
    18    18| @p maximum_input_line_length = 123456789
       Error|................................^Too many digits. The maximum is eight.
            |................................^Pragma ignored.
    19    19| 
    20    20| 6. Test number is exactly eight digits long.
    21    21| @p maximum_input_line_length = 12345678
    22    22| 
    23    23| 
            | <End-Of-File>
------------+-------------------------------------------------------------------

There were 6 Errors.
